services:
  bootstrap:
    image: "bootstrap"
    build:
      dockerfile_inline: |
        FROM spack/ubuntu-jammy:latest
        VOLUME /configs
        ARG ompi_version
        ENV ompi_version=$$ompi_version
        CMD cp /configs/spack.yaml . && \
            spack -e . add openmpi@$${ompi_version} && \
            spack -e . containerize >/configs/spack.Dockerfile && \
            sed -i -e 's/spack install/spack external find --all --not-buildable \&\& spack install/;' /configs/spack.Dockerfile
      args:
        ompi_version: main
      no_cache: true
    pull_policy: build
    volumes:
      - .github/:/configs

  env:
    image: "ghcr.io/sandialabs/fenix/env"
    build:
      # Generated by running the bootstrap image
      dockerfile: .github/spack.Dockerfile

  fenix:
    image: "fenix"
    build:
      dockerfile_inline: |
        ARG OMPI_VERSION
        FROM ghcr.io/sandialabs/fenix/env:$${OMPI_VERSION}
        COPY . /fenix
        RUN . /opt/spack-environment/activate.sh && \
            mkdir -p /fenix/build && \
            cd /fenix/build && \
            cmake /fenix \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_C_COMPILER=mpicc \
                -DFENIX_EXAMPLES=ON \
                -DFENIX_TESTS=ON \
                -DMPIEXEC_PREFLAGS="--allow-run-as-root;--map-by;:oversubscribe" && \
            make -j
        
        WORKDIR /fenix/build
        ENTRYPOINT ["/entrypoint.sh"]
        CMD ["ctest", "--output-on-failure"]
      args:
        OMPI_VERSION: main
    pull_policy: build
