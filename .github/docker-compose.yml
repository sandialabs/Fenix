services:
  bootstrap:
    image: "local/bootstrap"
    build:
      dockerfile_inline: |
        FROM spack/ubuntu-focal:0.21.3
        VOLUME /configs
        ARG ompi_version
        ENV ompi_version=$$ompi_version
        CMD cp /configs/spack.yaml . && \
            spack -e . add openmpi@$${ompi_version} && \
            spack -e . containerize >/configs/spack.Dockerfile && \
            sed -i -e 's/spack install/spack external find --all --not-buildable \&\& spack install/;' /configs/spack.Dockerfile
      args:
        ompi_version: main
      no_cache: true
    pull_policy: build
    volumes:
      - .github/:/configs

  env:
    image: "local/env"
    build:
      # Generated by spack in a previous workflow step
      dockerfile: .github/spack.Dockerfile
    depends_on:
      bootstrap:
        condition: service_completed_successfully
        required: true
    pull_policy: build


  fenix:
    image: "local/fenix"
    build:
      dockerfile_inline: |
        FROM local/env
        COPY . /fenix
        RUN . /opt/spack-environment/activate.sh && \
            mkdir -p /fenix/build && \
            rm -r /fenix/build/* && \
            cd /fenix/build && \
            cmake /fenix \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_C_COMPILER=mpicc \
                -DFENIX_EXAMPLES=ON \
                -DFENIX_TESTS=ON \
                -DMPIEXEC_PREFLAGS="--allow-run-as-root;--map-by;:oversubscribe" && \
            make -j
        
        WORKDIR /fenix/build
        ENTRYPOINT ["/entrypoint.sh"]
        CMD ["ctest", "--output-on-failure"]
    pull_policy: build
